const sidebar=document.getElementsByClassName("sidebar")[0],dashbordWorkspace=document.getElementsByClassName("dashboard-workspace")[0],dashboardContent=document.getElementsByClassName("dashboard-content")[0],dashBoardWorkspaceTextarea=document.getElementsByClassName("dashboard-workspace-textarea")[0],saveButton=document.getElementsByClassName("save-button")[0],noteTitleField=document.getElementsByClassName("note-title-field")[0];function limitTitleLength(ev){this.textContent.length>=20&&![8,9,17,37,38,39,40,46].includes(ev.keyCode)&&ev.preventDefault()}function getNote(ev){const noteTitle=ev.target.textContent,collectionTitle=ev.target.parentElement.querySelector(".sidebar-container-heading").textContent.trim();axios.get(`/api/note/${collectionTitle}/${noteTitle}`).then(response=>{modifyActiveNote(ev.target),sessionStorage.setItem("currentNote",JSON.stringify(response.data.note)),displayWorkspaceButtons(!0),displayNote(response.data.note),closeSidebar()}).catch(err=>{errorHandler([{msg:err.response.data.msg||"There was a problem."}])})}function addNote(ev){const container=ev.parentElement.parentElement.parentElement,collectionTitle=ev.parentElement.parentElement.textContent.trim(),form=new FormData;form.append("collectionTitle",collectionTitle);let newNoteIndex=0;const arr=Array.prototype.filter.call(container.querySelectorAll(".sidebar-container-element"),el=>el.textContent.trim().match(/^New Note\([0-9]*\)$/)).map(el=>parseInt(el.textContent.trim().slice(1+el.textContent.trim().indexOf("("),el.textContent.trim().indexOf(")")),10));arr.length>0&&(newNoteIndex=Math.max.apply(null,arr)),form.append("noteTitle",`New Note(${newNoteIndex+1})`),axios.post("/api/note/add",form).then(response=>{modifyActiveNote(addNoteToContainer(response.data.note,container)),sessionStorage.setItem("currentNote",JSON.stringify(response.data.note)),displayWorkspaceButtons(!0),displayNote(response.data.note),closeSidebar(),notificationHandler([{msg:"Note created."}],2e3)}).catch(err=>{errorHandler([{msg:err.response.data.msg||"There was a problem."}])})}function updateNote(){if(""===noteTitleField.textContent)return void errorHandler([{msg:"Note title cannot be empty."}]);saveToLoading(!0);const form=new FormData;if(sessionStorage.getItem("currentNote"))form.append("noteTitle",JSON.parse(sessionStorage.getItem("currentNote")).title),form.append("collectionTitle",JSON.parse(sessionStorage.getItem("currentNote")).collectionTitle),form.append("newNoteTitle",noteTitleField.textContent),form.append("newNoteContent",dashBoardWorkspaceTextarea.textContent||""),axios.post("/api/note/update",form).then(response=>{sessionStorage.setItem("currentNote",JSON.stringify(response.data.note)),document.querySelector(".active-note").textContent=response.data.note.title,notificationHandler([{msg:"Note saved."}],2e3)}).catch(err=>{errorHandler([{msg:err.response.data.msg||"There was a problem."}])}).finally(()=>{saveToLoading(!1)});else{const temp=document.querySelectorAll(".sidebar-container-heading");temp.length>0?(form.append("noteTitle",noteTitleField.textContent),form.append("noteContent",dashBoardWorkspaceTextarea.textContent||""),form.append("collectionTitle",temp[0].textContent.trim()),axios.post("/api/note/add",form).then(response=>{modifyActiveNote(addNoteToContainer(response.data.note,temp[0].parentElement)),sessionStorage.setItem("currentNote",JSON.stringify(response.data.note)),displayWorkspaceButtons(!0),displayNote(response.data.note),closeSidebar(),notificationHandler([{msg:"Note created."}],2e3)}).catch(err=>{errorHandler([{msg:err.response.data.msg||"There was a problem."}])}).finally(()=>{saveToLoading(!1)})):(errorHandler([{msg:"No collection to add note to."}]),saveToLoading(!1))}}function deleteNote(){if(sessionStorage.getItem("currentNote")){const form=new FormData;form.append("noteTitle",JSON.parse(sessionStorage.getItem("currentNote")).title),form.append("collectionTitle",JSON.parse(sessionStorage.getItem("currentNote")).collectionTitle),axios.post("/api/note/delete",form).then(response=>{let container=null;document.querySelectorAll(".sidebar-container-heading").forEach(elem=>{elem.textContent.trim()===JSON.parse(sessionStorage.getItem("currentNote")).collectionTitle&&(container=elem.parentElement)}),deleteNoteFromContainer(response.data.note,container),sessionStorage.removeItem("currentNote"),resetDashboard(),modifyActiveNote(null),displayWorkspaceButtons(!1),notificationHandler([{msg:"Note deleted."}],2e3)}).catch(err=>{errorHandler([{msg:err.response.data.msg||"There was a problem."}])})}else errorHandler([{msg:err.response.data.msg||"There was a problem."}])}function addCollection(){let newColIndex=0,arr=Array.prototype.filter.call(document.querySelectorAll(".sidebar-container-heading"),el=>el.textContent.trim().match(/^New Col\([0-9]*\)$/)).map(el=>parseInt(el.textContent.trim().slice(1+el.textContent.trim().indexOf("("),el.textContent.trim().indexOf(")")),10));arr.length>0&&(newColIndex=Math.max.apply(null,arr));const form=new FormData;form.append("collectionTitle",`New Col(${newColIndex+1})`),axios.post("/api/collection/add",form).then(response=>{addContainer(response.data.collection),notificationHandler([{msg:"Collection created."}],2e3)}).catch(err=>{errorHandler([{msg:err.response.data.msg||"There was a problem."}])})}function deleteCollection(ev){const collectionTitle=ev.parentElement.parentElement.textContent.trim(),form=new FormData;form.append("collectionTitle",collectionTitle),axios.post("/api/collection/delete",form).then(response=>{deleteContainer(response.data.collection),sessionStorage.getItem("currentNote")&&JSON.parse(sessionStorage.getItem("currentNote")).collectionTitle===collectionTitle&&(sessionStorage.removeItem("currentNote"),displayWorkspaceButtons(!1),resetDashboard(),modifyActiveNote(null)),notificationHandler([{msg:"Collection deleted."}],2e3)}).catch(err=>{errorHandler([{msg:err.response.data.msg||"There was a problem."}])})}function shareNote(){const note=JSON.parse(sessionStorage.getItem("currentNote")),form=new FormData;form.append("noteTitle",note.title),form.append("collectionTitle",note.collectionTitle),axios.post("/api/note/share",form).then(response=>{copyTextToClipboard(`${window.location.origin}${response.data.link}`),notificationHandler([{msg:"Share link copied to clipboard."}],5e3)}).catch(err=>{errorHandler([{msg:err.response.data.msg||"There was a problem."}])})}function displayNote(note){dashBoardWorkspaceTextarea.textContent=note.content,noteTitleField.textContent=note.title}function initializeDashboard(response){response.data.collections.forEach(addContainer),sidebar.scrollTop=0}function addContainer(collection){let container=document.createElement("div");container.classList.add("sidebar-container"),container.classList.add("animate");let containerHeading=document.createElement("div");containerHeading.classList.add("sidebar-container-heading"),containerHeading.textContent=collection.title;let containerTools=document.createElement("div");return containerTools.classList.add("sidebar-container-tools"),containerTools.innerHTML='<i class="fas fa-plus no-select" onclick="addNote(this)"></i><i class="fas fa-trash no-select" onclick="deleteCollection(this)"></i>',containerHeading.appendChild(containerTools),container.appendChild(containerHeading),collection.notes&&collection.notes.forEach(note=>addNoteToContainer(note,container)),sidebar.appendChild(container),sidebar.scrollTop=sidebar.scrollHeight,container}function deleteContainer(collection){Array.prototype.filter.call(document.querySelectorAll(".sidebar-container-heading"),h=>h.textContent.trim()===collection.title).forEach(h=>{h.parentElement.classList.add("animate-out"),setTimeout(()=>{h.parentElement.parentElement.removeChild(h.parentElement)},300)})}function addNoteToContainer(note,container){let containerElement=document.createElement("div");return containerElement.classList.add("sidebar-container-element"),containerElement.classList.add("animate"),containerElement.classList.add("no-select"),containerElement.textContent=note.title,containerElement.onclick=getNote,container.appendChild(containerElement),containerElement}function deleteNoteFromContainer(note,container){Array.prototype.filter.call(container.querySelectorAll(".sidebar-container-element"),el=>el.textContent.trim()===note.title).forEach(el=>{el.classList.add("animate-out"),setTimeout(()=>{el.parentElement.removeChild(el)},300)})}function modifyActiveNote(containerElement){document.querySelectorAll(".active-note").forEach(el=>{el.classList.remove("active-note"),el.onclick=getNote}),containerElement&&(containerElement.classList.add("active-note"),containerElement.onclick=null)}function resetDashboard(){dashBoardWorkspaceTextarea.textContent="",noteTitleField.textContent=""}function saveToLoading(val){val?(saveButton.innerHTML='<i class="fas fa-spinner animate-rotation-clockwise"></i>',saveButton.style.background=getComputedStyle(document.body).getPropertyValue("--info-color"),saveButton.onclick=null):(saveButton.innerHTML='<i class="fas fa-save"></i>',saveButton.style.background=null,saveButton.onclick=updateNote)}function copyContentToClipboard(){if(document.body.createTextRange){let range=document.body.createTextRange();range.moveToElementText(dashBoardWorkspaceTextarea),range.select(),document.execCommand("Copy"),range=null}else if(window.getSelection){let selection=window.getSelection(),range=document.createRange();range.selectNodeContents(dashBoardWorkspaceTextarea),selection.removeAllRanges(),selection.addRange(range),document.execCommand("Copy"),selection.removeAllRanges()}notificationHandler([{msg:"Note content copied to clipboard."}])}function copyTextToClipboard(str){const el=document.createElement("div");if(el.contentEditable="true",el.appendChild(document.createTextNode(str)),document.body.appendChild(el),document.body.createTextRange){let range=document.body.createTextRange();range.moveToElementText(el),range.select(),document.execCommand("Copy"),range=null}else if(window.getSelection){let selection=window.getSelection(),range=document.createRange();range.selectNodeContents(el),selection.removeAllRanges(),selection.addRange(range),document.execCommand("Copy"),selection.removeAllRanges()}document.body.removeChild(el)}function isSidebarOpen(){return!!getComputedStyle(sidebar).display&&"none"!==getComputedStyle(sidebar).display}function openSidebar(){sidebar.classList.add("sidebar-open"),sidebar.classList.add("animate-open-sidebar"),setTimeout(()=>{sidebar.classList.remove("animate-open-sidebar")},160)}function closeSidebar(){window.innerWidth<=900&&(sidebar.classList.add("animate-close-sidebar"),setTimeout(()=>{sidebar.classList.remove("animate-close-sidebar"),sidebar.classList.remove("sidebar-open")},160))}function displayWorkspaceButtons(val){document.querySelectorAll(".dashboard-workspace-buttons > i").forEach(el=>el.style.display=val?"inline-block":"none")}"/dashboard"===window.location.pathname&&(window.onload=(()=>{displayWorkspaceButtons(!1),sessionStorage.clear()}),axios.get("/api/user/collections?includeCollaborations=true").then(initializeDashboard).catch(err=>{errorHandler([{msg:err.response.data.msg||"There was a problem."}])}),window.onkeydown=(ev=>{83===ev.keyCode&&(navigator.platform.match("Mac")?ev.metaKey:ev.ctrlKey)&&(ev.preventDefault(),updateNote())}),noteTitleField.addEventListener("keydown",limitTitleLength));const submitRegister=document.getElementById("submit-register"),registerForm=document.getElementById("register-form"),submitLogin=document.getElementById("submit-login"),loginForm=document.getElementById("login-form");let displayInfo=!1;const indexRegister=document.getElementsByClassName("index-register")[0],indexLogin=document.getElementsByClassName("index-login")[0];function openLogin(){clearFields(),indexRegister.classList.add("animate-flip-out"),setTimeout(()=>{indexRegister.style.display="none",indexRegister.classList.remove("animate-flip-out"),indexLogin.style.display="grid",indexLogin.classList.add("animate-flip"),setTimeout(()=>{indexLogin.classList.remove("animate-flip")},160)},160)}function openRegister(){clearFields(),indexLogin.classList.add("animate-flip-out"),setTimeout(()=>{indexLogin.style.display="none",indexLogin.classList.remove("animate-flip-out"),indexRegister.style.display="grid",indexRegister.classList.add("animate-flip"),setTimeout(()=>{indexRegister.classList.remove("animate-flip")},160)},160)}function register(){const form=new FormData(registerForm);axios.post("/register",form).then(response=>{notificationHandler(response.data.notifications),setTimeout(()=>{openLogin(),response.data.notifications[0].user.username&&(document.getElementById("login-email").value=response.data.notifications[0].user.username)},1e3)}).catch(err=>{clearFields("password"),err.response&&errorHandler(err.response.data.errors||[{msg:"Server error."}])})}function login(){const form=new FormData(loginForm);axios.post("/login",form).then(response=>{window.location.pathname=response.data.redirectPath}).catch(err=>{clearFields("password"),err.response&&errorHandler(err.response.data.errors||[{msg:"Server error."}])})}function errorHandler(errors,time=4e3){if(!displayInfo){displayInfo=!0;const errorList=document.createElement("div");errorList.classList.add("error-list"),errorList.classList.add("animate-slide-down"),errors.forEach(err=>{let elem=document.createElement("p");elem.classList.add("error"),elem.textContent=err.msg,errorList.appendChild(elem)}),document.body.appendChild(errorList),displayInfo&&setTimeout(()=>{errorList.classList.remove("animate-slide-down"),errorList.classList.add("animate-slide-up"),setTimeout(()=>{document.body.removeChild(errorList),displayInfo=!1},300)},time)}}function notificationHandler(notif,time=4e3){if(!displayInfo){displayInfo=!0;const notifList=document.createElement("div");notifList.classList.add("notification-list"),notifList.classList.add("animate-slide-down"),notif.forEach(n=>{let elem=document.createElement("p");elem.classList.add("notification"),elem.textContent=n.msg,notifList.appendChild(elem)}),document.body.appendChild(notifList),displayInfo&&setTimeout(()=>{notifList.classList.remove("animate-slide-down"),notifList.classList.add("animate-slide-up"),setTimeout(()=>{document.body.removeChild(notifList),displayInfo=!1},300)},time)}}function logout(){axios.post("/logout").then(response=>{window.location.pathname=response.data.redirectPath}).catch(err=>{if(err.response.status>=400){let str="";for(let e of err.response.data.errors)str+=e.msg+" ";alert(str)}})}function clearFields(fields){"password"===fields?(document.getElementById("password").value="",document.getElementById("login-password").value="",document.getElementById("confirm_password").value=""):document.querySelectorAll("input").forEach(input=>input.value="")}const photoModalBackground=document.getElementsByClassName("photo-modal-background")[0],photoModalContent=document.getElementsByClassName("photo-modal-content")[0],addAttachment=document.getElementsByClassName("photo-modal-button-add")[0];let currentNote;function deleteAttachment(elem,photoURL){const form=new FormData;currentNote=JSON.parse(sessionStorage.getItem("currentNote")),form.append("noteTitle",currentNote.title),form.append("collectionTitle",currentNote.collectionTitle),form.append("photoURL",photoURL),axios.post("/api/note/attachment/delete",form).then(response=>{notificationHandler([{msg:"Attachment deleted."}],2e3),sessionStorage.setItem("currentNote",JSON.stringify(response.data.note)),removeImageFromModal(elem.parentElement)}).catch(err=>{alert(err.response.data.msg||"There was a problem.")})}function openAttachments(){(currentNote=JSON.parse(sessionStorage.getItem("currentNote")))&&(photoModalBackground.style.display="flex",currentNote.attachments.length>0?currentNote.attachments.forEach(addImageToModal):photoModalContent.innerHTML="No photos uploaded.")}function closeAttachments(){photoModalBackground.style.display=null,photoModalContent.innerHTML=null}function addImageToModal(url){const imageHTML=`<div style="position:relative;">\n    <a href=${url} target="_blank">\n    <img class="photo-modal-img" src=${url} alt="User uploaded image"></img></a>\n    <i class="fas fa-times-circle photo-modal-img-delete" onclick="deleteAttachment(this, '${url}');"></i></div>`;"No photos uploaded."===photoModalContent.innerHTML?photoModalContent.innerHTML=imageHTML:photoModalContent.innerHTML+=imageHTML}function removeImageFromModal(elem){elem.remove(),photoModalContent.innerHTML||(photoModalContent.innerHTML="No photos uploaded.")}photoModalBackground.onclick=(ev=>{ev.target==photoModalBackground&&closeAttachments()}),document.onkeydown=(ev=>{27===ev.keyCode&&photoModalBackground.style.display&&(ev.preventDefault(),closeAttachments())}),addAttachment.onchange=(ev=>{const photo=ev.target.files[0],form=new FormData;currentNote=JSON.parse(sessionStorage.getItem("currentNote")),form.append("noteTitle",currentNote.title),form.append("collectionTitle",currentNote.collectionTitle),form.append("photo",photo),axios.post("/api/note/attachment/add",form).then(response=>{notificationHandler([{msg:"Attachment added."}],2e3),sessionStorage.setItem("currentNote",JSON.stringify(response.data.note)),addImageToModal(response.data.photoURL)}).catch(err=>{alert(err.response.data.msg||"There was a problem.")})});const feedbackForm=document.getElementById("feedback-form");feedbackForm&&(feedbackForm.onsubmit=(ev=>{}));